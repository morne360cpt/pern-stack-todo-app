[{"C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\index.js":"1","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\App.js":"2","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\InputTodo.js":"3","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\ListTodos.js":"4","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\EditTodo.js":"5"},{"size":219,"mtime":1611508381840,"results":"6","hashOfConfig":"7"},{"size":352,"mtime":1611508295165,"results":"8","hashOfConfig":"7"},{"size":1189,"mtime":1611507666158,"results":"9","hashOfConfig":"7"},{"size":2123,"mtime":1611507666158,"results":"10","hashOfConfig":"7"},{"size":3340,"mtime":1611507555563,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xvzli9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\index.js",[],["26","27"],"C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\App.js",[],"C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\InputTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch(\"http://localhost:5000/todos\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n            });\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5\">Pern Todo List</h1>\r\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)} \r\n                />\r\n                <button className=\"btn btn-success\">Add</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputTodo;","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\ListTodos.js",["29"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    \r\n    // delete todo function\r\n\r\n    const deleteTodo = async (id) => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.todo_id !== id));\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <table className=\"table table-hover mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr key={todo.todo_id}>\r\n                            <td>{todo.description}</td>\r\n                            <td>\r\n                                <EditTodo todo={todo} />\r\n                            </td>\r\n                            <td>\r\n                                <button \r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.todo_id)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListTodos;","C:\\Users\\dell notebook\\Downloads\\pern-todo\\client\\src\\components\\EditTodo.js",["30"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.description);\r\n    \r\n    // edit descriptionfunction\r\n\r\n    const updateDescription = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\r\n                method: \"PUT\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            // will refresh content on screen\r\n            window.location = \"/\";\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button \r\n                type=\"button\" \r\n                className=\"btn btn-warning\" \r\n                data-toggle=\"modal\" \r\n                data-target={`#id${todo.todo_id}`}\r\n            >\r\n                Edit\r\n            </button>\r\n            \r\n            <div \r\n                className=\"modal\" \r\n                id={`id${todo.todo_id}`} \r\n                onClick={() => setDescription(todo.description)}\r\n            >\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                \r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Edit Todo</h4>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"close\" \r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setDescription(todo.description)}\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                    \r\n                        <div className=\"modal-body\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                value={description}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-warning\" \r\n                                data-dismiss=\"modal\"\r\n                                onClick={e => updateDescription(e)}\r\n                            >\r\n                                Edit\r\n                            </button>    \r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\" \r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setDescription(todo.description)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )};\r\n\r\nexport default EditTodo;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":19,"nodeType":"37","messageId":"38","endLine":11,"endColumn":27},{"ruleId":"35","severity":1,"message":"39","line":13,"column":19,"nodeType":"37","messageId":"38","endLine":13,"endColumn":29},{"ruleId":"35","severity":1,"message":"36","line":12,"column":19,"nodeType":"37","messageId":"38","endLine":12,"endColumn":27},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]